# omit the following lines, if your missing values are already properly labelled
codebook_data <- detect_missing(codebook_data,
only_labelled = TRUE, # only labelled values are autodetected as
# missing
negative_values_are_missing = FALSE, # negative values are missing values
ninety_nine_problems = TRUE,   # 99/999 are missing values, if they
# are more than 5 MAD from the median
)
# If you are not using formr, the codebook package needs to guess which items
# form a scale. The following line finds item aggregates with names like this:
# scale = scale_1 + scale_2R + scale_3R
# identifying these aggregates allows the codebook function to
# automatically compute reliabilities.
# However, it will not reverse items automatically.
codebook_data <- detect_scales(codebook_data)
# Does your dataset have a name that is not reflected in the file name?
# Uncomment the line below and change the name
# metadata(codebook_data)$name <- "My Awesome Dataset"
codebook(codebook_data,)
codebook_data <- read_sav("input/data/Estudio_3_ola1.sav")
# omit the following lines, if your missing values are already properly labelled
codebook_data <- detect_missing(codebook_data,
only_labelled = TRUE, # only labelled values are autodetected as
# missing
negative_values_are_missing = FALSE, # negative values are missing values
ninety_nine_problems = TRUE,   # 99/999 are missing values, if they
# are more than 5 MAD from the median
)
# If you are not using formr, the codebook package needs to guess which items
# form a scale. The following line finds item aggregates with names like this:
# scale = scale_1 + scale_2R + scale_3R
# identifying these aggregates allows the codebook function to
# automatically compute reliabilities.
# However, it will not reverse items automatically.
codebook_data <- detect_scales(codebook_data)
codebook(codebook_data,)
codebook(codebook_data)
codebook_data <- read_sav("input/data/Estudio_3_ola1.sav")
# omit the following lines, if your missing values are already properly labelled
codebook_data <- detect_missing(codebook_data,
only_labelled = TRUE, # only labelled values are autodetected as
# missing
negative_values_are_missing = FALSE, # negative values are missing values
ninety_nine_problems = TRUE,   # 99/999 are missing values, if they
# are more than 5 MAD from the median
)
# If you are not using formr, the codebook package needs to guess which items
# form a scale. The following line finds item aggregates with names like this:
# scale = scale_1 + scale_2R + scale_3R
# identifying these aggregates allows the codebook function to
# automatically compute reliabilities.
# However, it will not reverse items automatically.
codebook_data <- detect_scales(codebook_data)
# Does your dataset have a name that is not reflected in the file name?
# Uncomment the line below and change the name
# metadata(codebook_data)$name <- "My Awesome Dataset"
codebook(codebook_data)
codebook_data <- read_sav("input/data/Estudio_3_ola1.sav")
# omit the following lines, if your missing values are already properly labelled
codebook_data <- detect_missing(codebook_data,
only_labelled = TRUE, # only labelled values are autodetected as
# missing
negative_values_are_missing = FALSE, # negative values are missing values
ninety_nine_problems = TRUE,   # 99/999 are missing values, if they
# are more than 5 MAD from the median
)
# If you are not using formr, the codebook package needs to guess which items
# form a scale. The following line finds item aggregates with names like this:
# scale = scale_1 + scale_2R + scale_3R
# identifying these aggregates allows the codebook function to
# automatically compute reliabilities.
# However, it will not reverse items automatically.
codebook_data <- detect_scales(codebook_data)
codebook_data <- read_sav("input/data/Estudio_3_ola1.sav")
# omit the following lines, if your missing values are already properly labelled
codebook_data <- detect_missing(codebook_data,
only_labelled = TRUE, # only labelled values are autodetected as
# missing
negative_values_are_missing = FALSE, # negative values are missing values
ninety_nine_problems = TRUE,   # 99/999 are missing values, if they
# are more than 5 MAD from the median
)
# If you are not using formr, the codebook package needs to guess which items
# form a scale. The following line finds item aggregates with names like this:
# scale = scale_1 + scale_2R + scale_3R
# identifying these aggregates allows the codebook function to
# automatically compute reliabilities.
# However, it will not reverse items automatically.
codebook_data <- detect_scales(codebook_data)
codebook(codebook_data)
rmarkdown::render()
rmarkdown::render(input = "lisa-codebook.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
codebook_data <- read_sav(url("https://github.com/juancarloscastillo/merit-scale/raw/master/input/data/original/Estudio_3_ola1.sav"))
if (!require("pacman")) install.packages("pacman") # si no tenemos la librería packman instalada, se instala.
pacman::p_load(tidyverse, haven,codebook, ggplot2) # cargamos nuestras librerías
codebook_data <- read_sav(url("https://github.com/juancarloscastillo/merit-scale/raw/master/input/data/original/Estudio_3_ola1.sav"))
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "lisa-codebook.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
rmarkdown::render(input = "01_intro.Rmd")
library(skimr)
codebook_data <- read_sav(
url(
"https://github.com/juancarloscastillo/merit-scale/raw/master/input/data/original/Estudio_3_ola1.sav"
)
)
if (!require("pacman")) install.packages("pacman") # si no tenemos la librería packman instalada, se instala.
pacman::p_load(tidyverse, haven,codebook, ggplot2) # cargamos nuestras librerías
codebook_data <- read_sav(
url(
"https://github.com/juancarloscastillo/merit-scale/raw/master/input/data/original/Estudio_3_ola1.sav"
)
)
skim_codebook(data = codebook_data)
skim_codebook(data = codebook_data)
skim(data = codebook_data)
skim_with(labelled = skimr:::get_funs("factor"))
skim_with(labelled = skimr:::get_funs("factor"))
skimr::get_skimmers()
library(skimr)
skim_with(labelled = get_skimmers()$factor)
skim_with(labelled = get_skimmers(column = codebook_data)$factor)
library(skimr)
get_skimmers.haven_labelled <- function(column) {
modify_default_skimmers("numeric", new_skim_type = "haven_labelled")
}
skim_codebook(codebook_data)
skim_codebook(codebook_data)
sjPlot::view_df(codebook_data)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 10)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 100)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150,file = tempfile())
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150,file = tempfile(fileext = ".xls"))
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150))
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150,file = "codebook-lisa.xls")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150,
file = "codebook-lisa.xls",
encoding = "UTF-8")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 150,
file = "codebook-lisa.html",
encoding = "UTF-8")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 100,
file = "codebook-lisa.html",
encoding = "UTF-8")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,wrap.labels = 2,
file = "codebook-lisa.html",
encoding = "UTF-8")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa.html",
encoding = "UTF-8")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa.html",
encoding = "UTF-8")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
# file = "codebook-lisa.html",
encoding = "UTF-8"
)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
# file = "codebook-lisa.html",
encoding = "UTF-8"
)
View(codebook)
codebook[["page.content"]]
library(rvest)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa.pdf",
encoding = "UTF-8"
)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa.pdf",
encoding = "UTF-8"
)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa.text",
encoding = "UTF-8"
)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa.xls",
encoding = "UTF-8"
)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.pdf",
encoding = "UTF-8"
)
codebook<- sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8"
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.pdf",
encoding = "UTF-8"
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.word",
encoding = "UTF-8"
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.doc",
encoding = "UTF-8"
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.txt",
encoding = "UTF-8"
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8"
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8",
remove.spaces = TRUE
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8",
remove.spaces = TRUE,
max.len =100
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8",
remove.spaces = TRUE,
max.len =50
)
codebook_data$estlab
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8",
remove.spaces = TRUE,
max.len =30
)
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8",
remove.spaces = TRUE,
max.len =40
)
skim_codebook(codebook_data)
skim_codebook(codebook_data)
remove.packages("summarytools", lib="~/R/win-library/4.0")
install.packages("summarytools")
view(dfSummary(codebook_data, max.string.width = 50))
view(dfSummary(codebook_data, max.string.width = 50))
library(summarytools)
view(dfSummary(df, max.string.width = 50))
view(dfSummary(codebook_data,
max.string.width = 50))
label(x = codebook_data)
label(x = codebook_data,all = T)
label(x = codebook_data,all = T,simplify = T)
library(dataMaid)
library(dataMaid)
makeCodebook(iris)
codebook_data %>% select(get_ah_1,educat)
dfsubset<- codebook_data %>% select(get_ah_1,educat)
dfsubset
makeCodebook(dfsubset)
dfsubset<- codebook_data %>% select(get_ah_1,educat)
dfsubset
get_ah_1
dfsubset<- codebook_data %>% select(get_ah_1,educat)
makeCodebook(dfsubset)
dfsubset<- codebook_data %>% select(get_ah_1,educat)
makeCodebook(dfsubset)
dfsubset<- codebook_data %>% select(get_ah_1,educat)
makeCodebook(dfsubset)
dfsubset<- codebook_data %>%
select(get_ah_1,educat)
dfsubset$get_ah_1 <- as_factor(dfsubset$get_ah_1)
makeCodebook(dfsubset)
makeCodebook(dfsubset)
dfsubset<- codebook_data %>%
select(get_ah_1,educat)
dfsubset$get_ah_1 <- sjlabelled::as_factor(dfsubset$get_ah_1)
dfsubset$get_ah_1
makeCodebook(dfsubset)
dfsubset<- codebook_data %>%
select(get_ah_1,educat)
makeCodebook(dfsubset)
skim_codebook(codebook_data,)
skim_codebook(codebook_data)
skim_codebook(dfsubset)
dfsubset<- codebook_data %>%
select(get_ah_1,educat)
dfsubset$get_ah_1 <- sjlabelled::as_factor(dfsubset$get_ah_1)
skim_codebook(dfsubset)
dfsubset<- codebook_data %>%
select(get_ah_1,educat)
dfsubset$get_ah_1 <- sjlabelled::as_factor(dfsubset$get_ah_1)
dfsubset<- codebook_data %>%
select(get_ah_1,educat)
dfsubset$get_ah_1 <- sjlabelled::as_factor(dfsubset$get_ah_1)
dfsubset$educat <- sjlabelled::as_factor(dfsubset$educat)
skim_codebook(dfsubset)
skim_codebook(dfsubset)
print(dfSummary(codebook_data,
max.string.width = 50))
print(dfSummary(codebook_data,
max.string.width = 50), file = "codebook-pander.txt")
view(dfSummary(codebook_data,
max.string.width = 50), file = "codebook-pander.txt")
view(dfSummary(codebook_data,
max.string.width = 50),
file = "codebook.html")
view(dfSummary(codebook_data,
max.string.width = 50),
file = "codebook.xls")
view(dfSummary(codebook_data,
max.string.width = 50),
file = "codebook.html")
sjPlot::view_df(codebook_data,
show.frq = T,
show.na = T,
file = "codebook-lisa01.html",
encoding = "UTF-8",
remove.spaces = TRUE,
max.len =40
)
library(labelled)
s1 <- dplyr::data_frame(fac = labelled(c("M", "M", "F"), c(Male = "M", Female = "F")),
num = labelled(c(1, 2, 10), c(low = 1, high = 10)))
library(skimr)
skim_with(labelled = get_skimmers()$factor)
#> Adding type: labelled
skim(s1)
s1
library(codebook)
dfsubset<- codebook_data %>%
select(get_ah_1,educat,ingresos)
dfsubset
dfsubset<- codebook_data %>%
select(get_ah_1,educat,ingresos)
dfsubset$get_ah_1 <- sjlabelled::as_factor(dfsubset$get_ah_1)
dfsubset$educat <- sjlabelled::as_factor(dfsubset$educat)
skim_codebook(dfsubset)
codebook::codebook_table(dfsubset)
tabcodebook<- codebook::codebook_table(dfsubset)
View(tabcodebook)
dfsubset<- codebook_data %>%
select(get_ah_1,educat,ingresos)
skim_codebook(dfsubset)
tabcodebook<- codebook::codebook_table(dfsubset)
View(tabcodebook)
kable(tabcodebook)
library(knitr)
library(kableExtra)
kable(tabcodebook)
kable(tabcodebook) %>% kable_classic()
kable(tabcodebook,format = "markdown")
tabcodebook
View(tabcodebook)
codebook::data_description_default(dfsubset)
dfsubset<- codebook_data %>%
select(educat,sexo,get_ah_1,ingresos,)
skim_codebook(dfsubset)
tabcodebook<- codebook::codebook_table(dfsubset)
tabcodebook
View(tabcodebook)
dfsubset <- codebook::to_factor(dfsubset)
dfsubset
dfsubset <- codebook::to_factor(dfsubset)
tabcodebook<- codebook::codebook_table(dfsubset)
dfsubset<- codebook_data %>%
select(educat,sexo,get_ah_1,ingresos,)
skim_codebook(dfsubset)
dfsubset$sexo <- codebook::to_factor(dfsubset$sexo)
dfsubset$sexo
tabcodebook<- codebook::codebook_table(dfsubset)
View(tabcodebook)
tabcodebook
dfsubset$sexo <- codebook::to_factor(dfsubset$sexo)
tabcodebook<- codebook::codebook_table(dfsubset)
tabcodebook<- codebook::codebook_table(dfsubset)
tabcodebook
print(tabcodebook)
skim_codebook(dfsubset)
dfsubset<- codebook_data %>%
select(educat,sexo,get_ah_1,ingresos,)
# dfsubset$sexo <- codebook::to_factor(dfsubset$sexo)
tabcodebook<- codebook::codebook_table(dfsubset)
codebook::data_description_default(dfsubset)
codebook_browser(dfsubset)
label_browser(dfsubset)
codebook_browser(dfsubset)
codebook_browser(dfsubset)
label_browser_static(dfsubset)
label_browser_static(dfsubset,viewer = F)
label_browser_static(dfsubset,viewer = F)
# dfsubset$sexo <- codebook::to_factor(dfsubset$sexo)
tabcodebook<- codebook::codebook_survey_overview(dfsubset)
codebook_items(results = dfsubset)
codebook_items(results = dfsubset)
# dfsubset$sexo <- codebook::to_factor(dfsubset$sexo)
tabcodebook<- codebook::codebook_(dfsubset)
dfsubset<- codebook_data %>%
select(educat,sexo,get_ah_1,ingresos,)
# dfsubset$sexo <- codebook::to_factor(dfsubset$sexo)
tabcodebook<- codebook::codebook_(dfsubset)
codebook_items(results = dfsubset)
Hmisc::describe(dfsubset)
Hmisc::describe(x = dfsubset)
library(MASS)
Hmisc::describe(survey)
dfsubset<- codebook_data %>%
select(educat,sexo,get_ah_1,ingresos,)
dfsubset<- codebook_data %>%
dplyr::select(educat,sexo,get_ah_1,ingresos,)
Hmisc::describe(x = dfsubset)
dfsubset
View(survey)
class(survey)
library(MASS)
Hmisc::describe(survey
Hmisc::describe(survey)
library(MASS)
Hmisc::describe(survey)
dfSummary(survey, style = "grid", plain.ascii = TRUE)
dfSummary(dfsubset, style = "grid", plain.ascii = TRUE)
library(survival)
des()
des(dfsubset)
install.packages("epicalc")
devtools::install_version("epicalc",version="2.15.1.0")
install.packages("epiDisplay")
epicalc::codebook(dfsubset)
epicalc::codebook(survey)
